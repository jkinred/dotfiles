# Read `man 5 sway` for a complete reference.

#
### Variables
#

    set $mod Mod4

    # Vim keybindings
    set $left h
    set $down j
    set $up k
    set $right l

# NOTE: Font is not actually used, but size is
font pango:Hack 14

mouse_warping none

bar {
    swaybar_command waybar
}

smart_gaps on
gaps inner 10


### Output configuration

    # NOTE: Monitor layouts are managed by kanshi in ~/.config/kanshi/config
    output * bg $HOME/Pictures/background.png stretch

### Input configuration

    input "type:keyboard" {
        xkb_options ctrl:nocaps
    }

    input "type:touchpad" {
        click_method clickfinger
    }

    input "type:pointer" {
        accel_profile flat
        pointer_accel 0.3
    }

### Key bindings

    # Start a terminal
    bindsym $mod+Return exec wezterm

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start an app launcher
    bindsym $mod+d exec fuzzel | xargs swaymsg exec --
    #bindsym $mod+d exec dmenu_path | dmenu | xargs swaymsg exec --

    bindsym $mod+Shift+s exec grim -g "$(slurp -d -w 4 -c '#ff0000ff')" - | $HOME/.local/bin/satty --filename - --output-filename ~/Pictures/Screenshots/satty-$(date '+%Y%m%d-%H:%M:%S').png

    # Lock the screen
    bindsym $mod+Shift+x exec swaylock

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Control+Shift+c reload

    bindsym $mod+c exec $HOME/.local/bin/toggle-colour-mode

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#
# Workspaces
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

#
# Layout stuff
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+t focus mode_toggle

    bindsym $mod+space exec fuzzel | xargs swaymsg exec --

    # Move focus to the parent container
    bindsym $mod+a focus parent


#
# Scratchpad
#
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 20px
        bindsym $down resize grow height 20px
        bindsym $up resize shrink height 20px
        bindsym $right resize grow width 20px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 20px
        bindsym Down resize grow height 20px
        bindsym Up resize shrink height 20px
        bindsym Right resize grow width 20px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"


# Show which windows are using XWayland
for_window [shell="xwayland"] title_format "[XWayland] %title"
for_window [app_id="org.gnome.Calculator"] border pixel 5, floating enable
for_window [app_id="org.gnome.clocks"] border pixel 5, floating enable
for_window [instance="dynalist"] floating enable

# Zoom Meeting App
for_window [app_id="Zoom"] {
    border normal
    floating enable
    move container to workspace 5
    resize set width 780px height 600px
}
## For specific Zoom windows
#for_window [app_id="Zoom" title="^(Zoom|About)$"] border pixel, floating enable
#for_window [app_id="Zoom" title="Settings"] floating enable, floating_minimum_size 960 x 700
## Open Zoom Meeting windows on a new workspace (a bit hacky)
#for_window [app_id="Zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open

# Workspace movement between monitors (vi keys)
bindsym $mod+Control+Shift+$right move workspace to output right
bindsym $mod+Control+Shift+$left move workspace to output left
bindsym $mod+Control+Shift+$down move workspace to output down
bindsym $mod+Control+Shift+$up move workspace to output up

# Workspace movement between monitors (arrow keys)
bindsym $mod+Control+Shift+Right move workspace to output right
bindsym $mod+Control+Shift+Left move workspace to output left
bindsym $mod+Control+Shift+Down move workspace to output down
bindsym $mod+Control+Shift+Up move workspace to output up

#bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/sway/volume-max-100.sh up 5 && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/sway/volume-max-100.sh down 5 && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use wob for brightness/audio popup display
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

# Volume control
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost --unmute --increase 5 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioLowerVolume exec pamixer --unmute --decrease 5 && pamixer --get-volume > $WOBSOCK
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Monitor brightness
bindsym XF86MonBrightnessUp exec light -S "$(light -G | awk '{ print int(($1 + .72) * 1.4) }')" && light -G | cut -d'.' -f1 > $WOBSOCK
bindsym XF86MonBrightnessDown exec light -S "$(light -G | awk '{ print int($1 / 1.4) }')" && light -G | cut -d'.' -f1 > $WOBSOCK

# Media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
# Fn+F10
bindsym XF86Go exec --no-startup-id playerctl play-pause
bindsym --locked XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
# Fn+F11
bindsym Cancel exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous
# Fn+F9
bindsym XF86Messenger exec --no-startup-id playerctl previous

exec swaync
bindsym $mod+Shift+n exec swaync-client --toggle-panel --skip-wait

exec wl-paste --type text --watch clipman store --max-items=40
bindsym $mod+Shift+v exec clipman pick --tool=CUSTOM --tool-args="fuzzel -d"
bindsym $mod+Shift+t exec ~/.config/sway/scripts/totp.sh

exec_always systemctl --user start sway-session.target
#exec_always systemctl --user restart kanshi.service
exec_always {
  pkill kanshi
  kanshi &
}
exec dbus-update-activation-environment --all
#exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway XDG_SESSION_DESKTOP=sway[

include /etc/sway/config.d/*
include $HOME/.config/sway/config.d/*
